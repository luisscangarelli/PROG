import java.util.ArrayList;
import java.util.Scanner;

interface Exibivel {
    void exibirDados();
}

abstract class Veiculo implements Exibivel {
    protected String placa;
    protected String modelo;
    protected int ano;
    
    public Veiculo(String placa, String modelo, int ano) {
        this.placa = placa;
        this.modelo = modelo;
        this.ano = ano;
    }
    
    public String getPlaca() {
        return placa;
    }
    
    public void setPlaca(String placa) {
        this.placa = placa;
    }
    
    public String getModelo() {
        return modelo;
    }
    
    public void setModelo(String modelo) {
        this.modelo = modelo;
    }
    
    public int getAno() {
        return ano;
    }
    
    public void setAno(int ano) {
        this.ano = ano;
    }
}

class Carro extends Veiculo {
    private int qtdPortas;
    
    public Carro(String placa, String modelo, int ano, int qtdPortas) {
        super(placa, modelo, ano);
        this.qtdPortas = qtdPortas;
    }
    
    public int getQtdPortas() {
        return qtdPortas;
    }
    
    public void setQtdPortas(int qtdPortas) {
        this.qtdPortas = qtdPortas;
    }
    
    @Override
    public void exibirDados() {
        System.out.println("Carro - Modelo: " + modelo + " | Placa: " + placa + 
                          " | Ano: " + ano + " | Qtd Portas: " + qtdPortas);
    }
}

class Moto extends Veiculo {
    private int cilindrada;
    
    public Moto(String placa, String modelo, int ano, int cilindrada) {
        super(placa, modelo, ano);
        this.cilindrada = cilindrada;
    }
    
    public int getCilindrada() {
        return cilindrada;
    }
    
    public void setCilindrada(int cilindrada) {
        this.cilindrada = cilindrada;
    }
    
    @Override
    public void exibirDados() {
        System.out.println("Moto - Modelo: " + modelo + " | Placa: " + placa + 
                          " | Ano: " + ano + " | Cilindrada: " + cilindrada + "cc");
    }
}

class Caminhao extends Veiculo {
    private double capacidadeCarga;
    
    public Caminhao(String placa, String modelo, int ano, double capacidadeCarga) {
        super(placa, modelo, ano);
        this.capacidadeCarga = capacidadeCarga;
    }
    
    public double getCapacidadeCarga() {
        return capacidadeCarga;
    }
    
    public void setCapacidadeCarga(double capacidadeCarga) {
        this.capacidadeCarga = capacidadeCarga;
    }
    
    @Override
    public void exibirDados() {
        System.out.println("Caminhão - Modelo: " + modelo + " | Placa: " + placa + 
                          " | Ano: " + ano + " | Capacidade Carga: " + capacidadeCarga + "t");
    }
}

public class SistemaVeiculos {
    private static ArrayList<Veiculo> veiculos = new ArrayList<>();
    private static Scanner scanner = new Scanner(System.in);
    
    public static void main(String[] args) {
        int opcao;
        
        do {
            exibirMenu();
            opcao = scanner.nextInt();
            scanner.nextLine();
            
            switch (opcao) {
                case 1:
                    cadastrarVeiculo();
                    break;
                case 2:
                    listarVeiculos();
                    break;
                case 3:
                    System.out.println("Saindo...");
                    break;
                default:
                    System.out.println("Opção inválida!");
            }
        } while (opcao != 3);
        
        scanner.close();
    }
    
    private static void exibirMenu() {
        System.out.println("\n=== SISTEMA DE CADASTRO DE VEÍCULOS ===");
        System.out.println("1 - Cadastrar novo veículo");
        System.out.println("2 - Listar veículos");
        System.out.println("3 - Sair");
        System.out.print(">> ");
    }
    
    private static void cadastrarVeiculo() {
        System.out.println("\n--- CADASTRAR VEÍCULO ---");
        System.out.print("Tipo (1-Carro, 2-Moto, 3-Caminhão): ");
        int tipo = scanner.nextInt();
        scanner.nextLine();
        
        System.out.print("Modelo: ");
        String modelo = scanner.nextLine();
        System.out.print("Placa: ");
        String placa = scanner.nextLine();
        System.out.print("Ano: ");
        int ano = scanner.nextInt();
        scanner.nextLine();
        
        switch (tipo) {
            case 1:
                System.out.print("Quantidade de portas: ");
                int qtdPortas = scanner.nextInt();
                scanner.nextLine();
                veiculos.add(new Carro(placa, modelo, ano, qtdPortas));
                System.out.println("Carro cadastrado com sucesso!");
                break;
            case 2:
                System.out.print("Cilindrada: ");
                int cilindrada = scanner.nextInt();
                scanner.nextLine();
                veiculos.add(new Moto(placa, modelo, ano, cilindrada));
                System.out.println("Moto cadastrada com sucesso!");
                break;
            case 3:
                System.out.print("Capacidade de carga (toneladas): ");
                double capacidadeCarga = scanner.nextDouble();
                scanner.nextLine();
                veiculos.add(new Caminhao(placa, modelo, ano, capacidadeCarga));
                System.out.println("Caminhão cadastrado com sucesso!");
                break;
            default:
                System.out.println("Tipo de veículo inválido!");
        }
    }
    
    private static void listarVeiculos() {
        System.out.println("\n--- LISTA DE VEÍCULOS CADASTRADOS ---");
        
        if (veiculos.isEmpty()) {
            System.out.println("Nenhum veículo cadastrado.");
            return;
        }
        
        for (Veiculo veiculo : veiculos) {
            veiculo.exibirDados();
        }
    }
}TDE 2 PROG3
